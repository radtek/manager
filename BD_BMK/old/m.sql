-- MySQL Script generated by MySQL Workbench
-- Mon Apr  2 11:01:37 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sauna
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sauna` ;

-- -----------------------------------------------------
-- Schema sauna
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sauna` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `sauna` ;

-- -----------------------------------------------------
-- Table `sauna`.`grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`grupo` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`grupo` (
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`item` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`item` (
  `nombre` VARCHAR(45) NOT NULL,
  `grupo_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`),
  CONSTRAINT `fk_item_grupo1`
    FOREIGN KEY (`grupo_nombre`)
    REFERENCES `sauna`.`grupo` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_item_grupo1_idx` ON `sauna`.`item` (`grupo_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`persona` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`persona` (
  `cod` VARCHAR(11) NOT NULL,
  `nombre` VARCHAR(145) NULL,
  `nombre_corto` VARCHAR(45) NULL,
  `fecha_nacimiento` DATE NULL,
  `telefono` VARCHAR(90) NULL,
  `celular` VARCHAR(90) NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `email` VARCHAR(145) NULL,
  `estado_item_nombre` VARCHAR(45) NOT NULL,
  `tipo_item_nombre` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(245) NULL,
  PRIMARY KEY (`cod`),
  CONSTRAINT `fk_persona_item1`
    FOREIGN KEY (`estado_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_persona_item2`
    FOREIGN KEY (`tipo_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_persona_item1_idx` ON `sauna`.`persona` (`estado_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_persona_item2_idx` ON `sauna`.`persona` (`tipo_item_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`direccion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`direccion` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`direccion` (
  `domicilio_fiscal` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`domicilio_fiscal`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`divisa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`divisa` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`divisa` (
  `fecha` FLOAT NOT NULL,
  `valor` FLOAT NULL,
  `moneda_item_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`fecha`),
  CONSTRAINT `fk_divisa_item1`
    FOREIGN KEY (`moneda_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_divisa_item1_idx` ON `sauna`.`divisa` (`moneda_item_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`impuesto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`impuesto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`impuesto` (
  `fecha` DATE NOT NULL,
  `valor` FLOAT NULL,
  `moneda_item_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`fecha`),
  CONSTRAINT `fk_impuesto_item1`
    FOREIGN KEY (`moneda_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_impuesto_item1_idx` ON `sauna`.`impuesto` (`moneda_item_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`comprobante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`comprobante` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`comprobante` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` TEXT NULL,
  `serie` VARCHAR(4) NULL,
  `numero` INT NULL,
  `fecha_emision` DATETIME NULL,
  `anulado` TINYINT NULL,
  `pago_item_nombre` VARCHAR(45) NOT NULL,
  `estado_item_nombre` VARCHAR(45) NOT NULL,
  `operacion_item_nombre` VARCHAR(45) NOT NULL,
  `tipo_item_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_comprobante_item1`
    FOREIGN KEY (`pago_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_item2`
    FOREIGN KEY (`estado_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_item3`
    FOREIGN KEY (`operacion_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_item4`
    FOREIGN KEY (`tipo_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_item1_idx` ON `sauna`.`comprobante` (`pago_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_item2_idx` ON `sauna`.`comprobante` (`estado_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_item3_idx` ON `sauna`.`comprobante` (`operacion_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_item4_idx` ON `sauna`.`comprobante` (`tipo_item_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`regimen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`regimen` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`regimen` (
  `fecha` DATE NOT NULL,
  `valor` FLOAT NULL,
  `regimen_item_nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`fecha`),
  CONSTRAINT `fk_regimen_item1`
    FOREIGN KEY (`regimen_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_regimen_de_pago_item1_idx` ON `sauna`.`regimen` (`regimen_item_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`per_dir`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`per_dir` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`per_dir` (
  `persona_cod` VARCHAR(11) NOT NULL,
  `direccion_domicilio_fiscal` VARCHAR(255) NOT NULL,
  `establecimiento_item_nombre` VARCHAR(45) NOT NULL,
  CONSTRAINT `fk_per_dir_direccion1`
    FOREIGN KEY (`direccion_domicilio_fiscal`)
    REFERENCES `sauna`.`direccion` (`domicilio_fiscal`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_per_dir_item1`
    FOREIGN KEY (`establecimiento_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_per_dir_persona1`
    FOREIGN KEY (`persona_cod`)
    REFERENCES `sauna`.`persona` (`cod`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_per_dir_direccion1_idx` ON `sauna`.`per_dir` (`direccion_domicilio_fiscal` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_per_dir_item1_idx` ON `sauna`.`per_dir` (`establecimiento_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_per_dir_persona1_idx` ON `sauna`.`per_dir` (`persona_cod` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`comprobante_has_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`comprobante_has_persona` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`comprobante_has_persona` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_id` INT NOT NULL,
  `persona_cod` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_comprobante_has_persona_comprobante1`
    FOREIGN KEY (`comprobante_id`)
    REFERENCES `sauna`.`comprobante` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_has_persona_persona1`
    FOREIGN KEY (`persona_cod`)
    REFERENCES `sauna`.`persona` (`cod`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_has_persona_persona1_idx` ON `sauna`.`comprobante_has_persona` (`persona_cod` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_has_persona_comprobante1_idx` ON `sauna`.`comprobante_has_persona` (`comprobante_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`comprobante_has_plato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`comprobante_has_plato` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`comprobante_has_plato` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_id` INT NOT NULL,
  `unidad_item_nombre` VARCHAR(45) NOT NULL,
  `plato_nombre` VARCHAR(145) NOT NULL,
  `cantidad` FLOAT NULL,
  `precio` FLOAT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_comprobante_has_plato_comprobante1`
    FOREIGN KEY (`comprobante_id`)
    REFERENCES `sauna`.`comprobante` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_has_plato_item1`
    FOREIGN KEY (`unidad_item_nombre`)
    REFERENCES `sauna`.`item` (`nombre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_has_plato_comprobante1_idx` ON `sauna`.`comprobante_has_plato` (`comprobante_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_has_plato_item1_idx` ON `sauna`.`comprobante_has_plato` (`unidad_item_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `index_plato_nombre` ON `sauna`.`comprobante_has_plato` (`plato_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`datos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`datos` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`datos` (
  `splitter_1` INT NULL,
  `splitter_2` INT NULL,
  `splitter_3` INT NULL,
  `familia_filas` INT NULL,
  `familia_columnas` INT NULL,
  `plato_filas` INT NULL,
  `plato_columnas` INT NULL,
  `clave_wifi` VARCHAR(45) NULL,
  `fondo_tapiz` VARCHAR(55) NULL)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`usuario` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `pass` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `nombre_UNIQUE` ON `sauna`.`usuario` (`nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`persona_has_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`persona_has_usuario` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`persona_has_usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `persona_cod` VARCHAR(11) NOT NULL,
  `usuario_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_persona_has_usuario_persona1`
    FOREIGN KEY (`persona_cod`)
    REFERENCES `sauna`.`persona` (`cod`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_persona_has_usuario_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `sauna`.`usuario` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_persona_has_usuario_persona1_idx` ON `sauna`.`persona_has_usuario` (`persona_cod` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_persona_has_usuario_usuario1_idx` ON `sauna`.`persona_has_usuario` (`usuario_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`ingrediente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`ingrediente` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`ingrediente` (
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`familia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`familia` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`familia` (
  `nombre` VARCHAR(145) NOT NULL,
  `x` INT NULL,
  `y` INT NULL,
  `font` VARCHAR(145) NULL,
  `color` VARCHAR(45) NULL,
  `background_color` VARCHAR(45) NULL,
  PRIMARY KEY (`nombre`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`plato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`plato` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`plato` (
  `nombre` VARCHAR(145) NOT NULL,
  `familia_nombre` VARCHAR(145) NOT NULL,
  `x` INT NULL,
  `y` INT NULL,
  `font` VARCHAR(145) NULL,
  `color` VARCHAR(45) NULL,
  `background_color` VARCHAR(45) NULL,
  `descripcion` VARCHAR(245) NULL,
  `precio` FLOAT NULL,
  PRIMARY KEY (`nombre`),
  CONSTRAINT `fk_plato_familia1`
    FOREIGN KEY (`familia_nombre`)
    REFERENCES `sauna`.`familia` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_plato_familia1_idx` ON `sauna`.`plato` (`familia_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`ingrediente_has_plato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`ingrediente_has_plato` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`ingrediente_has_plato` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ingrediente_nombre` VARCHAR(45) NOT NULL,
  `plato_nombre` VARCHAR(45) NOT NULL,
  `cantidad` FLOAT NULL,
  `precio` FLOAT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_ingrediente_has_plato_ingrediente1`
    FOREIGN KEY (`ingrediente_nombre`)
    REFERENCES `sauna`.`ingrediente` (`nombre`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ingrediente_has_plato_plato1`
    FOREIGN KEY (`plato_nombre`)
    REFERENCES `sauna`.`plato` (`nombre`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_ingrediente_has_plato_ingrediente1_idx` ON `sauna`.`ingrediente_has_plato` (`ingrediente_nombre` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_ingrediente_has_plato_plato1_idx` ON `sauna`.`ingrediente_has_plato` (`plato_nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sauna`.`pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sauna`.`pago` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sauna`.`pago` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_id` INT NOT NULL,
  `persona_cod` VARCHAR(11) NOT NULL,
  `precio` FLOAT NULL,
  `fecha` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_pago_comprobante1`
    FOREIGN KEY (`comprobante_id`)
    REFERENCES `sauna`.`comprobante` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pago_persona1`
    FOREIGN KEY (`persona_cod`)
    REFERENCES `sauna`.`persona` (`cod`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_pago_comprobante1_idx` ON `sauna`.`pago` (`comprobante_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_pago_persona1_idx` ON `sauna`.`pago` (`persona_cod` ASC);

SHOW WARNINGS;
USE `sauna` ;

-- -----------------------------------------------------
-- procedure multiple_query
-- -----------------------------------------------------

USE `sauna`;
DROP procedure IF EXISTS `sauna`.`multiple_query`;
SHOW WARNINGS;

DELIMITER $$
USE `sauna`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `multiple_query`(m_query TEXT)
BEGIN
	/* INICIALIZACION*/
    SET @m_query:= m_query;
 
	label1: LOOP
		SET @pos:= LOCATE('&&END_QUERY&&', @m_query);
        SET @query_:= SUBSTRING(@m_query,1, @pos-1);
                
		
        PREPARE stmt1 FROM @query_;	
		EXECUTE stmt1;

		DEALLOCATE PREPARE stmt1;
        
        SET @m_query = SUBSTRING(@m_query, @pos+13);

		IF @m_query = '' THEN
		  LEAVE label1;
		END IF;			
	END LOOP label1;    
END$$

DELIMITER ;
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
