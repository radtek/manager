-- MySQL Script generated by MySQL Workbench
-- Wed May 10 20:44:28 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema managersystem
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `managersystem` ;

-- -----------------------------------------------------
-- Schema managersystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `managersystem` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `managersystem` ;

-- -----------------------------------------------------
-- Table `managersystem`.`moneda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`moneda` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`moneda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `moneda` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`igv`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`igv` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`igv` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `moneda_id` INT NOT NULL,
  `num` DECIMAL(4,3) NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`id`, `moneda_id`),
  CONSTRAINT `fk_igv_moneda1`
    FOREIGN KEY (`moneda_id`)
    REFERENCES `managersystem`.`moneda` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fecha_idx` ON `managersystem`.`igv` (`fecha` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_igv_moneda1_idx` ON `managersystem`.`igv` (`moneda_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`tipo_cambio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`tipo_cambio` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`tipo_cambio` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `moneda_id` INT NOT NULL,
  `num` DECIMAL(4,3) NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`id`, `moneda_id`),
  CONSTRAINT `fk_tipo_cambio_moneda1`
    FOREIGN KEY (`moneda_id`)
    REFERENCES `managersystem`.`moneda` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fecha_idx` ON `managersystem`.`tipo_cambio` (`fecha` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_tipo_cambio_moneda1_idx` ON `managersystem`.`tipo_cambio` (`moneda_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`tipo_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`tipo_persona` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`tipo_persona` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `numero` INT NULL,
  `persona` VARCHAR(55) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`persona` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`persona` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo_persona_id` INT NOT NULL,
  `habilitado` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_persona_tipo_persona1`
    FOREIGN KEY (`tipo_persona_id`)
    REFERENCES `managersystem`.`tipo_persona` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fk_persona_tipo_persona1_idx` ON `managersystem`.`persona` (`tipo_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`tipo_documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`tipo_documento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`tipo_documento` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `numero` INT NULL,
  `documento` VARCHAR(55) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`documento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`documento` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo_documento_id` INT NOT NULL,
  `habilitado` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_documento_tipo_documento1`
    FOREIGN KEY (`tipo_documento_id`)
    REFERENCES `managersystem`.`tipo_documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fk_documento_tipo_documento1_idx` ON `managersystem`.`documento` (`tipo_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`marca`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`marca` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`marca` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `marca` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `marca_idx` ON `managersystem`.`marca` (`marca` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `marca_UNIQUE` ON `managersystem`.`marca` (`marca` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`tipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`tipo` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`tipo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `tipo_idx` ON `managersystem`.`tipo` (`tipo` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `tipo_UNIQUE` ON `managersystem`.`tipo` (`tipo` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`unidad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`unidad` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`unidad` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `unidad` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `unidad_idx` ON `managersystem`.`unidad` (`unidad` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `unidad_UNIQUE` ON `managersystem`.`unidad` (`unidad` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`producto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo_id` INT NULL,
  `marca_id` INT NULL,
  `unidad_id` INT NULL,
  `codigo` VARCHAR(15) NULL,
  `descripcion` VARCHAR(145) NULL,
  `habilitado` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_producto_marca1`
    FOREIGN KEY (`marca_id`)
    REFERENCES `managersystem`.`marca` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_producto_tipo1`
    FOREIGN KEY (`tipo_id`)
    REFERENCES `managersystem`.`tipo` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_producto_unidad1`
    FOREIGN KEY (`unidad_id`)
    REFERENCES `managersystem`.`unidad` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fk_producto_marca1_idx` ON `managersystem`.`producto` (`marca_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_producto_tipo1_idx` ON `managersystem`.`producto` (`tipo_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_producto_unidad1_idx` ON `managersystem`.`producto` (`unidad_id` ASC);

SHOW WARNINGS;
CREATE INDEX `producto_codigo1_idx` ON `managersystem`.`producto` (`codigo` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`documento_h_producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`documento_h_producto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`documento_h_producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  `producto_id` INT NOT NULL,
  `cantidad` FLOAT NULL,
  `precio` FLOAT NULL,
  `cantidad_aux` FLOAT NULL,
  `precio_aux` FLOAT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_documento_h_producto_producto1`
    FOREIGN KEY (`producto_id`)
    REFERENCES `managersystem`.`producto` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_documento_h_producto_documento1`
    FOREIGN KEY (`documento_id`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_producto_producto1_idx` ON `managersystem`.`documento_h_producto` (`producto_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_producto_documento1_idx` ON `managersystem`.`documento_h_producto` (`documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`documento_h_persona`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`documento_h_persona` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`documento_h_persona` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  `persona_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_documento_h_persona_persona1`
    FOREIGN KEY (`persona_id`)
    REFERENCES `managersystem`.`persona` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_documento_h_persona_documento1`
    FOREIGN KEY (`documento_id`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_persona_persona1_idx` ON `managersystem`.`documento_h_persona` (`persona_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_persona_documento1_idx` ON `managersystem`.`documento_h_persona` (`documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`documento_h_documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`documento_h_documento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`documento_h_documento` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  `documento_id1` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_documento_h_documento_documento1`
    FOREIGN KEY (`documento_id`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_documento_h_documento_documento2`
    FOREIGN KEY (`documento_id1`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_documento_documento1_idx` ON `managersystem`.`documento_h_documento` (`documento_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_documento_h_documento_documento2_idx` ON `managersystem`.`documento_h_documento` (`documento_id1` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`amplitud`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`amplitud` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`amplitud` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `documento_id_UNIQUE` ON `managersystem`.`amplitud` (`documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`rol`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`rol` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`rol` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `rol_idx` ON `managersystem`.`rol` (`rol` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `rol_UNIQUE` ON `managersystem`.`rol` (`rol` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`naturales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`naturales` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`naturales` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `persona_id` INT NOT NULL,
  `dni` CHAR(8) NULL,
  `nombre` VARCHAR(145) NULL,
  `direccion` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `persona_id`),
  CONSTRAINT `fk_persona_naturales_persona1`
    FOREIGN KEY (`persona_id`)
    REFERENCES `managersystem`.`persona` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_persona_naturales_persona1_idx` ON `managersystem`.`naturales` (`persona_id` ASC);

SHOW WARNINGS;
CREATE INDEX `dni_idx` ON `managersystem`.`naturales` (`dni` ASC);

SHOW WARNINGS;
CREATE INDEX `nombre_idx` ON `managersystem`.`naturales` (`nombre` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`usuario` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `naturales_persona_id` INT NOT NULL,
  `rol_id` INT NOT NULL,
  `usuario` VARCHAR(45) NULL,
  `pass` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `naturales_persona_id`),
  CONSTRAINT `fk_usuario_rol1`
    FOREIGN KEY (`rol_id`)
    REFERENCES `managersystem`.`rol` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_usuario_naturales1`
    FOREIGN KEY (`naturales_persona_id`)
    REFERENCES `managersystem`.`naturales` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_usuario_rol1_idx` ON `managersystem`.`usuario` (`rol_id` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `usuario_UNIQUE` ON `managersystem`.`usuario` (`usuario` ASC);

SHOW WARNINGS;
CREATE INDEX `login_idx` ON `managersystem`.`usuario` (`usuario` ASC, `pass` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_usuario_naturales1_idx` ON `managersystem`.`usuario` (`naturales_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`juridica`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`juridica` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`juridica` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `persona_id` INT NOT NULL,
  `ruc` CHAR(11) NULL,
  `razon_social` VARCHAR(135) NULL,
  `tipo_contribuyente` VARCHAR(65) NULL,
  `nombre_comercial` VARCHAR(135) NULL,
  `estado` VARCHAR(45) NULL,
  `condicion` VARCHAR(45) NULL,
  `domicilio_fiscal` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `persona_id`),
  CONSTRAINT `fk_persona_juridica_persona1`
    FOREIGN KEY (`persona_id`)
    REFERENCES `managersystem`.`persona` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_persona_juridica_persona1_idx` ON `managersystem`.`juridica` (`persona_id` ASC);

SHOW WARNINGS;
CREATE INDEX `ruc_idx` ON `managersystem`.`juridica` (`ruc` ASC);

SHOW WARNINGS;
CREATE INDEX `razon_social_idx` ON `managersystem`.`juridica` (`razon_social` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`operacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`operacion` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`operacion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `operacion` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`comprobante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`comprobante` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`comprobante` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  `operacion_id` INT NOT NULL,
  PRIMARY KEY (`id`, `documento_id`, `operacion_id`),
  CONSTRAINT `fk_comprobante_documento2`
    FOREIGN KEY (`documento_id`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_comprobante_operacion1`
    FOREIGN KEY (`operacion_id`)
    REFERENCES `managersystem`.`operacion` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_documento2` ON `managersystem`.`comprobante` (`documento_id` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_operacion1_idx` ON `managersystem`.`comprobante` (`operacion_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`boleta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`boleta` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`boleta` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `nombre` VARCHAR(245) NULL,
  `declaracion` DATE NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_boleta_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_boleta_comprobante1` ON `managersystem`.`boleta` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`factura` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`factura` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `declaracion` DATE NULL,
  `percepcion` FLOAT NULL,
  `descuento` FLOAT NULL,
  `embalaje` FLOAT NULL,
  `modalidad` INT NULL,
  `moneda` INT NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_factura_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_factura_comprobante1` ON `managersystem`.`factura` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`nota_credito`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`nota_credito` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`nota_credito` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `declaracion` DATE NULL,
  `modalidad` INT NULL,
  `moneda` INT NULL,
  `monto` FLOAT NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_nota_credito_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_nota_credito_comprobante1` ON `managersystem`.`nota_credito` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`nota_debito`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`nota_debito` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`nota_debito` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `declaracion` DATE NULL,
  `modalidad` INT NULL,
  `moneda` INT NULL,
  `monto` FLOAT NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_nota_debito_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_nota_debito_comprobante1` ON `managersystem`.`nota_debito` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`guia_remision_remitente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`guia_remision_remitente` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`guia_remision_remitente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `direccion_partida` VARCHAR(245) NULL,
  `direccion_llegada` VARCHAR(245) NULL,
  `marca_placa` VARCHAR(45) NULL,
  `codigo_vehiculo` VARCHAR(45) NULL,
  `licencia_conducir` VARCHAR(45) NULL,
  `fecha_inicio_traslado` DATE NULL,
  `devolucion` TINYINT(1) NULL,
  `importacion` TINYINT(1) NULL,
  `compra` TINYINT(1) NULL,
  `traslado_emisor_pago` TINYINT(1) NULL,
  `venta` TINYINT(1) NULL,
  `transformacion` TINYINT(1) NULL,
  `consignacion` TINYINT(1) NULL,
  `exportacion` TINYINT(1) NULL,
  `otros` TINYINT(1) NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_guia_remision_remitente_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_guia_remision_remitente_comprobante1_idx` ON `managersystem`.`guia_remision_remitente` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`nota_pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`nota_pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`nota_pedido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `anulado` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_nota_pedido_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_nota_pedido_comprobante1_idx` ON `managersystem`.`nota_pedido` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`cotizacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`cotizacion` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`cotizacion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_cotizacion_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_cotizacion_comprobante1_idx` ON `managersystem`.`cotizacion` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`proveedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`proveedor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `juridica_persona_id` INT NOT NULL,
  `representante` VARCHAR(255) NULL,
  `telefono` VARCHAR(55) NULL,
  `fax` VARCHAR(55) NULL,
  `pagina_web` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `comentario` VARCHAR(255) NULL,
  `nombre` VARCHAR(255) NULL,
  `rpm` VARCHAR(55) NULL,
  `rpc` VARCHAR(55) NULL,
  PRIMARY KEY (`id`, `juridica_persona_id`),
  CONSTRAINT `fk_proveedor_juridica1`
    FOREIGN KEY (`juridica_persona_id`)
    REFERENCES `managersystem`.`juridica` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_proveedor_juridica1` ON `managersystem`.`proveedor` (`juridica_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`transportista`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`transportista` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`transportista` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `juridica_persona_id` INT NOT NULL,
  `representante` VARCHAR(255) NULL,
  `telefono` VARCHAR(55) NULL,
  `fax` VARCHAR(55) NULL,
  `pagina_web` VARCHAR(255) NULL,
  `email` VARCHAR(255) NULL,
  `comentario` VARCHAR(255) NULL,
  PRIMARY KEY (`id`, `juridica_persona_id`),
  CONSTRAINT `fk_transportista_juridica1`
    FOREIGN KEY (`juridica_persona_id`)
    REFERENCES `managersystem`.`juridica` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_transportista_juridica1` ON `managersystem`.`transportista` (`juridica_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`cliente_ruc`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`cliente_ruc` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`cliente_ruc` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `juridica_persona_id` INT NOT NULL,
  `telefono` VARCHAR(55) NULL,
  PRIMARY KEY (`id`, `juridica_persona_id`),
  CONSTRAINT `fk_cliente_ruc_juridica1`
    FOREIGN KEY (`juridica_persona_id`)
    REFERENCES `managersystem`.`juridica` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_cliente_ruc_juridica1` ON `managersystem`.`cliente_ruc` (`juridica_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`cliente_dni`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`cliente_dni` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`cliente_dni` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `naturales_persona_id` INT NOT NULL,
  PRIMARY KEY (`id`, `naturales_persona_id`),
  CONSTRAINT `fk_cliente_dni_naturales1`
    FOREIGN KEY (`naturales_persona_id`)
    REFERENCES `managersystem`.`naturales` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_cliente_dni_naturales1` ON `managersystem`.`cliente_dni` (`naturales_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`anexo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`anexo` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`anexo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `documento_id` INT NOT NULL,
  `fecha_emision` DATE NULL,
  `fecha_sistema` DATETIME NULL,
  `serie` CHAR(4) NULL,
  `numero` CHAR(8) NULL,
  PRIMARY KEY (`id`, `documento_id`),
  CONSTRAINT `fk_comprobante_documento1`
    FOREIGN KEY (`documento_id`)
    REFERENCES `managersystem`.`documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fecha_emision_idx` ON `managersystem`.`anexo` (`fecha_emision` ASC);

SHOW WARNINGS;
CREATE INDEX `serie` ON `managersystem`.`anexo` (`serie` ASC);

SHOW WARNINGS;
CREATE INDEX `numero` ON `managersystem`.`anexo` (`numero` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_comprobante_documento1` ON `managersystem`.`anexo` (`documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`orden`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`orden` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`orden` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `modalidad` INT NULL,
  `moneda` INT NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_orden_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_orden_comprobante1_idx` ON `managersystem`.`orden` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`flete`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`flete` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`flete` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  `declaracion` DATE NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_flete_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_flete_comprobante1_idx` ON `managersystem`.`flete` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`registro_sin_documento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`registro_sin_documento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`registro_sin_documento` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_registro_sin_documento_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_registro_sin_documento_comprobante1_idx` ON `managersystem`.`registro_sin_documento` (`comprobante_documento_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`series`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`series` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`series` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `operacion_id` INT NOT NULL,
  `tipo_documento_id` INT NOT NULL,
  `serie` VARCHAR(4) NULL,
  `width` INT NULL,
  `height` INT NULL,
  `margen_fila` INT NULL,
  `margen_columna` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_series_tipo_documento1`
    FOREIGN KEY (`tipo_documento_id`)
    REFERENCES `managersystem`.`tipo_documento` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_series_operacion1`
    FOREIGN KEY (`operacion_id`)
    REFERENCES `managersystem`.`operacion` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_series_tipo_documento1_idx` ON `managersystem`.`series` (`tipo_documento_id` ASC);

SHOW WARNINGS;
CREATE UNIQUE INDEX `serie_UNIQUE` ON `managersystem`.`series` (`serie` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_series_operacion1_idx` ON `managersystem`.`series` (`operacion_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`config_hoja`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`config_hoja` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`config_hoja` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `series_id` INT NOT NULL,
  `nombre` VARCHAR(85) NULL,
  `point` POINT NULL,
  `stylesheet` VARCHAR(45) NULL,
  `family` VARCHAR(45) NULL,
  `point_size` INT NULL,
  `style_name` VARCHAR(45) NULL,
  `weight` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_config_hoja_series1`
    FOREIGN KEY (`series_id`)
    REFERENCES `managersystem`.`series` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_config_hoja_series1_idx` ON `managersystem`.`config_hoja` (`series_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`establecimientos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`establecimientos` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`establecimientos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `juridica_persona_id` INT NOT NULL,
  `codigo` VARCHAR(45) NULL,
  `tipo` VARCHAR(145) NULL,
  `direccion` VARCHAR(245) NULL,
  `actividad` VARCHAR(145) NULL,
  PRIMARY KEY (`id`, `juridica_persona_id`),
  CONSTRAINT `fk_establecimientos_juridica1`
    FOREIGN KEY (`juridica_persona_id`)
    REFERENCES `managersystem`.`juridica` (`persona_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_establecimientos_juridica1_idx` ON `managersystem`.`establecimientos` (`juridica_persona_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `managersystem`.`saldo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `managersystem`.`saldo` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `managersystem`.`saldo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comprobante_documento_id` INT NOT NULL,
  PRIMARY KEY (`id`, `comprobante_documento_id`),
  CONSTRAINT `fk_saldo_comprobante1`
    FOREIGN KEY (`comprobante_documento_id`)
    REFERENCES `managersystem`.`comprobante` (`documento_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_saldo_comprobante1_idx` ON `managersystem`.`saldo` (`comprobante_documento_id` ASC);

SHOW WARNINGS;
USE `managersystem` ;

-- -----------------------------------------------------
-- procedure transaction_rate
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`transaction_rate`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `transaction_rate`(num_l DECIMAL(4,2)
, fecha_l DATE, coin_item_id_l INT)
BEGIN
	ROLLBACK;
	START TRANSACTION;
    
	IF (SELECT EXISTS 
	(SELECT '1' FROM rate r WHERE r.coin_item_id = coin_item_id_l AND r.fecha = fecha_l)) 
	THEN
		SET @id:=(SELECT MAX(id) FROM rate WHERE coin_item_id = coin_item_id_l AND fecha = fecha_l);
        UPDATE rate SET num=num_l WHERE id= @id;
		#INSERT INTO rate(id, num, coin_item_id)VALUES(
        #@id
        #, num_l
        #, coin_item_id_l) 
        #ON DUPLICATE KEY UPDATE num=VALUES(num), coin_item_id=VALUES(coin_item_id);  
	ELSE
		INSERT INTO rate(num, fecha, coin_item_id)
		VALUES(num_l, fecha_l, coin_item_id_l);
	END IF; 
    COMMIT;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure transaction_igv
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`transaction_igv`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `transaction_igv`(num_l DECIMAL(4,2)
, fecha_l DATE)
BEGIN
	ROLLBACK;
	START TRANSACTION;
	IF (SELECT EXISTS 
	(SELECT '1' FROM igv WHERE fecha = fecha_l)) 
	THEN 	
		SELECT @id:= (SELECT MAX(id) FROM igv WHERE fecha=fecha_l);
		INSERT INTO igv(id, num)VALUES(@id, num_l) 
        ON DUPLICATE KEY UPDATE num=VALUES(num);        
	ELSE
		INSERT INTO igv(num, fecha)VALUES(num_l, fecha_l);		
	END IF; 
	COMMIT;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- function split_str
-- -----------------------------------------------------

USE `managersystem`;
DROP function IF EXISTS `managersystem`.`split_str`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `split_str`(
x TEXT,
delim VARCHAR(12),
pos INT) RETURNS text CHARSET utf8
RETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(x, delim, pos),
       LENGTH(SUBSTRING_INDEX(x, delim, pos -1)) + 1),
       delim, '')$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure buscar_producto_comprado
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`buscar_producto_comprado`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `buscar_producto_comprado`(producto_id INT)
BEGIN 
 SELECT com.id, com.razon_social AS razon_social, com.serie_num AS serie_num, com.tipo_doc AS tipo_doc, com.precio + IFNULL(flete.precio, 0) - IFNULL(nc.precio, 0) AS p_unitario, com.cantidad + com.regalo - IFNULL(nc.cantidad, 0) AS cantidad, com.fecha_emision AS fecha_emision FROM (SELECT 0) AS t
 
 JOIN (SELECT d.id AS id, per_d_razon_social.dato AS razon_social, concat(d_d_serie.dato, ' - ', d_d_numero.dato) AS serie_num, d.tipo_item_id AS tipo_doc, d_h_prod_com.total / d_h_prod_com.cantidad AS precio, SUM(d_h_prod_com.cantidad) AS cantidad, SUM(d_h_prod_com.regalo) AS regalo, d.fecha_emision AS fecha_emision FROM (SELECT 0) AS t
 JOIN documento d ON (d.estado_item_id = 61 AND d.operacion_item_id = 48 AND d.tipo_item_id IN (50, 51))  
 JOIN documento_dato d_d_serie ON (d_d_serie.documento_id = d.id AND d_d_serie.item_id = 2)  
 JOIN documento_dato d_d_numero ON (d_d_numero.documento_id = d.id AND d_d_numero.item_id = 3)
 JOIN documento_h_persona d_h_per_com ON d_h_per_com.documento_id = d.id
 JOIN persona per ON (per.id = d_h_per_com.persona_id AND per.tipo_item_id = 2)
 JOIN persona_dato per_d_razon_social ON (d_h_per_com.persona_id = per_d_razon_social.persona_id AND per_d_razon_social.item_id = 8)
 JOIN documento_h_producto d_h_prod_com ON (d_h_prod_com.producto_id = producto_id AND d_h_prod_com.documento_id = d.id) GROUP BY d.id ORDER BY d.fecha_emision DESC, d.id DESC) AS com ON 1
 
 LEFT JOIN (SELECT d_h_prod_flete.total / d_h_prod_flete.cantidad AS precio FROM (SELECT 0) AS t
 JOIN documento d ON (d.estado_item_id = 61 AND d.operacion_item_id = 48 AND d.tipo_item_id IN (50, 51))  
 JOIN documento_h_documento d_h_d_flete ON d_h_d_flete.documento_id = d.id
 JOIN documento d_flete ON (d_h_d_flete.documento_id1 = d_flete.id AND d_flete.tipo_item_id = 52)
 JOIN documento_h_producto d_h_prod_flete ON (d_h_prod_flete.producto_id = producto_id AND d_h_prod_flete.documento_id = d_flete.id) GROUP BY d.id) AS flete ON 1
 
 LEFT JOIN (SELECT d_h_prod_nc.total / d_h_prod_nc.cantidad AS precio, d_h_prod_nc.cantidad AS cantidad FROM (SELECT 0) AS t
 JOIN documento d ON (d.estado_item_id = 61 AND d.operacion_item_id = 48 AND d.tipo_item_id IN (50, 51))
 JOIN documento_h_documento d_h_d_nc ON d_h_d_nc.documento_id = d.id
 JOIN documento d_nc ON (d_h_d_nc.documento_id1 = d_nc.id AND d_nc.tipo_item_id = 56)
 JOIN documento_h_producto d_h_prod_nc ON (d_h_prod_nc.producto_id = producto_id AND d_h_prod_nc.documento_id = d.id) GROUP BY d.id) AS nc ON 1;

END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure set_current_coin
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`set_current_coin`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `set_current_coin`(coin_item_id INT)
BEGIN
	START TRANSACTION;
    UPDATE current_coin cc SET cc.coin_item_id = coin_item_id WHERE id = 1;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure multiple_query
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`multiple_query`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `multiple_query`(m_query TEXT)
BEGIN
	/* INICIALIZACION*/
    SET @m_query:= m_query;
 
	label1: LOOP
		SET @pos:= LOCATE('&&END_QUERY&&', @m_query);
        SET @query_:= SUBSTRING(@m_query,1, @pos-1);
                
		
        PREPARE stmt1 FROM @query_;	
		EXECUTE stmt1;

		DEALLOCATE PREPARE stmt1;
        
        SET @m_query = SUBSTRING(@m_query, @pos+13);

		IF @m_query = '' THEN
		  LEAVE label1;
		END IF;			
	END LOOP label1;    
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure compra_amarres
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`compra_amarres`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `compra_amarres`(id INT)
BEGIN
SET @count := 1;
SET @id := id;
DELETE FROM amplitud WHERE id<>0;
ALTER TABLE amplitud AUTO_INCREMENT = 1;
INSERT INTO amplitud(documento_id)VALUES(id);
SET @cmp_count := 1;
SET @start_limit := 0;

WHILE @count <= @cmp_count DO
	SET @query_ := "INSERT INTO amplitud(documento_id)"
    " SELECT dhd.documento_id1 FROM documento_h_documento dhd WHERE dhd.documento_id = "
    "(SELECT documento_id FROM amplitud ORDER BY id ASC LIMIT ?, 1) ON DUPLICATE KEY UPDATE documento_id=VALUES(documento_id)";
	PREPARE STMT FROM @query_;
	EXECUTE STMT USING @start_limit;
	DEALLOCATE PREPARE STMT;
	SET @count := @count+1;
	SET @start_limit := @start_limit+1;
	SET @cmp_count := (SELECT COUNT(id) FROM amplitud);
END WHILE;

DELETE FROM amplitud WHERE documento_id = id;

INSERT INTO amplitud(documento_id)VALUES(id);
SET @count := @count-1;
SET @start_limit := @start_limit-1;
WHILE @count <= @cmp_count DO
	SET @query_ := "INSERT INTO amplitud(documento_id) SELECT dhd.documento_id FROM documento_h_documento dhd WHERE dhd.documento_id1 = (SELECT documento_id FROM amplitud ORDER BY id ASC LIMIT ?, 1) ON DUPLICATE KEY UPDATE documento_id=VALUES(documento_id)";
	PREPARE STMT FROM @query_;
	EXECUTE STMT USING @start_limit;
	DEALLOCATE PREPARE STMT;
	SET @count := @count+1;
	SET @start_limit := @start_limit+1;
	SET @cmp_count := (SELECT COUNT(id) FROM amplitud);
END WHILE;

DELETE FROM amplitud WHERE documento_id = id;

SELECT documento.id
, juridica.persona_id
, documento.tipo_documento_id
, anexo.fecha_emision, anexo.serie, anexo.numero
, juridica.ruc, juridica.razon_social
 FROM documento
 JOIN anexo ON anexo.documento_id = documento.id
 JOIN documento_h_persona ON documento_h_persona.documento_id = documento.id
 JOIN juridica ON documento_h_persona.persona_id = juridica.persona_id
 WHERE documento.habilitado = 1 AND documento.id IN (SELECT documento_id FROM amplitud);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure compra_adjacentes
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`compra_adjacentes`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `compra_adjacentes`(id INT)
BEGIN
SELECT d.fecha_emision, dd_serie.dato, dd_numero.dato, perd_codigo.dato, perd_nombre.dato, d.tipo_item_id, per.id, d.id FROM documento d
JOIN documento_dato dd_serie ON (dd_serie.documento_id = d.id AND dd_serie.item_id = 2)
JOIN documento_dato dd_numero ON (dd_numero.documento_id = d.id AND dd_numero.item_id = 3)
JOIN documento_h_persona dhp ON dhp.documento_id = d.id
JOIN persona per ON (per.id = dhp.persona_id)
JOIN persona_dato perd_codigo ON (per.id = perd_codigo.persona_id AND perd_codigo.item_id = 23)
JOIN persona_dato perd_nombre ON (per.id = perd_nombre.persona_id AND perd_nombre.item_id = 24)
WHERE d.operacion_item_id = 48 AND d.estado_item_id = 61 AND d.id IN 
(
SELECT dhd.documento_id1 FROM documento_h_documento dhd 
WHERE dhd.documento_id = id
);

END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure compra_documentos
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`compra_documentos`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `compra_documentos`(id INT, tipo INT)
BEGIN
SELECT d.fecha_emision, dd_serie.dato, dd_numero.dato, perd_codigo.dato, perd_nombre.dato, d.tipo_item_id, per.id, d.id FROM documento d
JOIN documento_dato dd_serie ON (dd_serie.documento_id = d.id AND dd_serie.item_id = 2)
JOIN documento_dato dd_numero ON (dd_numero.documento_id = d.id AND dd_numero.item_id = 3)
JOIN documento_h_persona dhp ON dhp.documento_id = d.id
JOIN persona per ON (per.id = dhp.persona_id)
JOIN persona_dato perd_codigo ON (per.id = perd_codigo.persona_id AND perd_codigo.item_id = 23)
JOIN persona_dato perd_nombre ON (per.id = perd_nombre.persona_id AND perd_nombre.item_id = 24)
WHERE d.operacion_item_id = 48 AND d.tipo_item_id = tipo AND d.estado_item_id = 61 AND d.id IN 
(
SELECT dhd.documento_id1 FROM documento_h_documento dhd 
WHERE dhd.documento_id = id
);
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure test_usuarios
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`test_usuarios`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `test_usuarios`()
BEGIN
	declare v_max int unsigned default 1000;
	declare v_counter int unsigned default 0;
	while v_counter < v_max do  
    insert into persona (id, habilitado)values(v_counter+1, 1);
    insert into usuario (persona_id,rol_id,usuario,pass) values (v_counter+1, floor(rand()*(3)+1), concat(
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1),
              substring('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789', floor(rand()*(36)+1), 1)
             ), '1234');
    set v_counter=v_counter+1;
  end while;
END$$

DELIMITER ;
SHOW WARNINGS;

-- -----------------------------------------------------
-- procedure drop_tables
-- -----------------------------------------------------

USE `managersystem`;
DROP procedure IF EXISTS `managersystem`.`drop_tables`;
SHOW WARNINGS;

DELIMITER $$
USE `managersystem`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `drop_tables`()
BEGIN
	SET FOREIGN_KEY_CHECKS = 0; 
	SET @tables = NULL;
	SELECT GROUP_CONCAT(table_schema, '.', table_name) INTO @tables
	FROM information_schema.tables 
	WHERE table_schema = 'database_name'; -- specify DB name here.

	SET @tables = CONCAT('DROP TABLE ', @tables);
	PREPARE stmt FROM @tables;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;
	SET FOREIGN_KEY_CHECKS = 1; 
END$$

DELIMITER ;
SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
